// @version = 5
// (c) Hachann

indicator("Hoeffding D Screener against Index")

tableposy = input.string(defval='bottom', title='Panel Position', options=['bottom', 'middle', 'top'], inline='pos')
tableposx = input.string(defval='left', title='', options=['left', 'center', 'right'], inline='pos')

var table dTable = table.new(tableposy + '_' + tableposx, 2, 40)

WeibullParametersEst(int n) =>
    float sigma  = 0.1435 + 0.38/math.exp(0.174*n) + 0.0385/math.exp(0.0019*n)
    float lambda = -7.26/(1 + 2.09/math.exp(0.1*n) - 0.3/math.exp(0.0025*n))
    float gamma  = 0.01266 + 0.023/math.exp(0.088*n) + 0.0037/math.exp(0.0114*n)
    float mu     = -0.1537*(1 + 2.43/math.exp(0.168*n) + 0.253/math.exp(0.002*n))
    [sigma,lambda,gamma,mu]

pVal(sigma,lambda,gamma,mu,score) =>
    1-math.pow(1-lambda*math.pow((score-mu)/sigma,math.pow(gamma,-1.)),math.pow(lambda,-1.))

HoeffdingD(ts1,ts2,len) =>
    float pV = na 
    [sigma,lambda,gamma,mu] = WeibullParametersEst(len)
    var x = array.new_float(0)
    var y = array.new_float(0)
    if bar_index > last_bar_index-len
        array.push(x,ts1)
        array.push(y,ts2)
        if array.size(x) > len 
            array.shift(x)
            array.shift(y)
    if barstate.islast
        xS = array.copy(x)
        yS = array.copy(y)
        array.sort(xS)
        array.sort(yS)
        float Q = 0.
        float R = 0.
        float S = 0.
        for i = 0 to len-1
            int rankX = array.binary_search(xS, array.get(x,i))+1
            int rankY = array.binary_search(yS, array.get(y,i))+1
            int c     = 0
            for j = 0 to len-1
                c += array.get(x,j) < array.get(x,i) and array.get(y,j) < array.get(y,i) ? 1 : 0
            Q += (rankX-1)*(rankX-2)*(rankY-1)*(rankY-2)
            R += (rankX-2)*(rankY-2)*c 
            S += (c-1)*c
        Dn = 30*(Q-2*(len-2)*R+(len-2)*(len-3)*S)/(len*(len-1)*(len-2)*(len-3)*(len-4))
        pV := 1-pVal(sigma,lambda,gamma,mu,Dn)
    pV

len   = input.int(30, "Len")

t1 =  input.symbol("NASDAQ_DLY:NDX", "Index")
t2 =  input.symbol("NASDAQ:AAPL")
t3 =  input.symbol("NASDAQ:MSFT")
t4 =  input.symbol("NASDAQ:GOOG")
t5 =  input.symbol("NASDAQ:GOOGL")
t6 =  input.symbol("NASDAQ:AMZN")
t7 =  input.symbol("NASDAQ:TSLA")
t8 =  input.symbol("NASDAQ:META")
t9 =  input.symbol("NASDAQ:NVDA")
t10 = input.symbol("NASDAQ:PEP")
t11 = input.symbol("NASDAQ:COST")
t12 = input.symbol("NASDAQ:AVGO")
t13 = input.symbol("NASDAQ:ASML")
t14 = input.symbol("NASDAQ:AZN")
t15 = input.symbol("NASDAQ:CSCO")
t16 = input.symbol("NASDAQ:TMUS")
t17 = input.symbol("NASDAQ:TXN")
t18 = input.symbol("NASDAQ:CMCSA")
t19 = input.symbol("NASDAQ:QCOM")
t20 = input.symbol("NASDAQ:ADBE")
t21 = input.symbol("NASDAQ:AMGN")
t22 = input.symbol("NASDAQ:HON")
t23 = input.symbol("NASDAQ:INTC")
t24 = input.symbol("NASDAQ:INTU") 
t25 = input.symbol("NASDAQ:AMD") 
t26 = input.symbol("NASDAQ:PYPL ")
t27 = input.symbol("NASDAQ:NFLX") 
t28 = input.symbol("NASDAQ:SBUX ")
t29 = input.symbol("NASDAQ:ADP ")
t30 = input.symbol("NASDAQ:MDLZ") 
t31 = input.symbol("NASDAQ:GILD ")
t32 = input.symbol("NASDAQ:PDD") 
t33 = input.symbol("NASDAQ:REGN") 
t34 = input.symbol("NASDAQ:ADI") 
t35 = input.symbol("NASDAQ:AMAT") 
t36 = input.symbol("NASDAQ:VRTX ")
t37 = input.symbol("NASDAQ:JD") 
t38 = input.symbol("NASDAQ:ISRG") 
t39 = input.symbol("NASDAQ:BKNG") 
t40 = input.symbol("NASDAQ:ABNB")
// t41 = input.symbol("EURONEXT:VIV") 

ts1  = request.security(t1, "", math.log(close[0]/close[1]))
ts2  = request.security(t2, "", math.log(close[0]/close[1]))
ts3  = request.security(t3, "", math.log(close[0]/close[1]))
ts4  = request.security(t4, "", math.log(close[0]/close[1]))
ts5  = request.security(t5, "", math.log(close[0]/close[1]))
ts6  = request.security(t6, "", math.log(close[0]/close[1]))
ts7  = request.security(t7, "", math.log(close[0]/close[1]))
ts8  = request.security(t8, "", math.log(close[0]/close[1]))
ts9  = request.security(t9, "", math.log(close[0]/close[1]))
ts10 = request.security(t10, "", math.log(close[0]/close[1]))
ts11 = request.security(t11, "", math.log(close[0]/close[1]))
ts12 = request.security(t12, "", math.log(close[0]/close[1]))
ts13 = request.security(t13, "", math.log(close[0]/close[1]))
ts14 = request.security(t14, "", math.log(close[0]/close[1]))
ts15 = request.security(t15, "", math.log(close[0]/close[1]))
ts16 = request.security(t16, "", math.log(close[0]/close[1]))
ts17 = request.security(t17, "", math.log(close[0]/close[1]))
ts18 = request.security(t18, "", math.log(close[0]/close[1]))
ts19 = request.security(t19, "", math.log(close[0]/close[1]))
ts20 = request.security(t20, "", math.log(close[0]/close[1]))
ts21 = request.security(t21, "", math.log(close[0]/close[1]))
ts22 = request.security(t22, "", math.log(close[0]/close[1]))
ts23 = request.security(t23, "", math.log(close[0]/close[1]))
ts24 = request.security(t24, "", math.log(close[0]/close[1]))
ts25 = request.security(t25, "", math.log(close[0]/close[1]))
ts26 = request.security(t26, "", math.log(close[0]/close[1]))
ts27 = request.security(t27, "", math.log(close[0]/close[1]))
ts28 = request.security(t28, "", math.log(close[0]/close[1]))
ts29 = request.security(t29, "", math.log(close[0]/close[1]))
ts30 = request.security(t30, "", math.log(close[0]/close[1]))
ts31 = request.security(t31, "", math.log(close[0]/close[1]))
ts32 = request.security(t32, "", math.log(close[0]/close[1]))
ts33 = request.security(t33, "", math.log(close[0]/close[1]))
ts34 = request.security(t34, "", math.log(close[0]/close[1]))
ts35 = request.security(t35, "", math.log(close[0]/close[1]))
ts36 = request.security(t36, "", math.log(close[0]/close[1]))
ts37 = request.security(t37, "", math.log(close[0]/close[1]))
ts38 = request.security(t38, "", math.log(close[0]/close[1]))
ts39 = request.security(t39, "", math.log(close[0]/close[1]))
ts40 = request.security(t40, "", math.log(close[0]/close[1]))
// ts41 = request.security(t41, "", math.log(close[0]/close[1]))

// Flatten[Table[{j},{i,1,9},{j,i+1,10}]]//Length

d2  = math.round(HoeffdingD(ts1,ts2,len)*100)
d3  = math.round(HoeffdingD(ts1,ts3,len)*100)
d4  = math.round(HoeffdingD(ts1,ts4,len)*100)
d5  = math.round(HoeffdingD(ts1,ts5,len)*100)
d6  = math.round(HoeffdingD(ts1,ts6,len)*100)
d7  = math.round(HoeffdingD(ts1,ts7,len)*100)
d8  = math.round(HoeffdingD(ts1,ts8,len)*100)
d9  = math.round(HoeffdingD(ts1,ts9,len)*100)
d10  = math.round(HoeffdingD(ts1,ts10,len)*100)
d11 = math.round(HoeffdingD(ts1,ts11,len)*100)
d12 = math.round(HoeffdingD(ts1,ts12,len)*100)
d13 = math.round(HoeffdingD(ts1,ts13,len)*100)
d14 = math.round(HoeffdingD(ts1,ts14,len)*100)
d15 = math.round(HoeffdingD(ts1,ts15,len)*100)
d16 = math.round(HoeffdingD(ts1,ts16,len)*100)
d17 = math.round(HoeffdingD(ts1,ts17,len)*100)
d18 = math.round(HoeffdingD(ts1,ts18,len)*100)
d19 = math.round(HoeffdingD(ts1,ts19,len)*100)
d20 = math.round(HoeffdingD(ts1,ts20,len)*100)
d21 = math.round(HoeffdingD(ts1,ts21,len)*100)
d22 = math.round(HoeffdingD(ts1,ts22,len)*100)
d23 = math.round(HoeffdingD(ts1,ts23,len)*100)
d24 = math.round(HoeffdingD(ts1,ts24,len)*100)
d25 = math.round(HoeffdingD(ts1,ts25,len)*100)
d26 = math.round(HoeffdingD(ts1,ts26,len)*100)
d27 = math.round(HoeffdingD(ts1,ts27,len)*100)
d28 = math.round(HoeffdingD(ts1,ts28,len)*100)
d29 = math.round(HoeffdingD(ts1,ts29,len)*100)
d30 = math.round(HoeffdingD(ts1,ts30,len)*100)
d31 = math.round(HoeffdingD(ts1,ts31,len)*100)
d32 = math.round(HoeffdingD(ts1,ts32,len)*100)
d33 = math.round(HoeffdingD(ts1,ts33,len)*100)
d34 = math.round(HoeffdingD(ts1,ts34,len)*100)
d35 = math.round(HoeffdingD(ts1,ts35,len)*100)
d36 = math.round(HoeffdingD(ts1,ts36,len)*100)
d37 = math.round(HoeffdingD(ts1,ts37,len)*100)
d38 = math.round(HoeffdingD(ts1,ts38,len)*100)
d39 = math.round(HoeffdingD(ts1,ts39,len)*100)
d40 = math.round(HoeffdingD(ts1,ts40,len)*100)
// d40 = math.round(HoeffdingD(ts1,ts41,len)*100)


allAvg = math.round(math.avg(d2,d3,d4,d5,d6,d7,d8,d9,d10,d11,d12,d13,d14,d15,d16,d17,d18,d19,d20,d21,d22,d23,d24,d25,d26,d27,d28,d29,d30,d31,d32,d33,d34,d35,d36,d37,d38,d39,d40))

if barstate.islast 

    table.cell(dTable, 0, 0, "Average =", text_color=#FFFFFF, bgcolor=#0044ff, text_size=size.auto, text_halign=text.align_center)
    table.cell(dTable, 1, 0, str.tostring(allAvg) + " %", text_color=#FFFFFF, bgcolor=#0044ff, text_size=size.auto, text_halign=text.align_center)

    table.cell(dTable, 0, 1,   t2,  text_color=#FFFFFF, bgcolor= d2 >= allAvg ?   #ff0000 : #000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 0, 2,   t3,  text_color=#FFFFFF, bgcolor= d3 >= allAvg ?   #ff0000 : #000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 0, 3,   t4,  text_color=#FFFFFF, bgcolor= d4 >= allAvg ?   #ff0000 : #000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 0, 4,   t5,  text_color=#FFFFFF, bgcolor= d5 >= allAvg ?   #ff0000 : #000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 0, 5,   t6,  text_color=#FFFFFF, bgcolor= d6 >= allAvg ?   #ff0000 : #000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 0, 6,   t7,  text_color=#FFFFFF, bgcolor= d7 >= allAvg ?   #ff0000 : #000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 0, 7,   t8,  text_color=#FFFFFF, bgcolor= d8 >= allAvg ?   #ff0000 : #000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 0, 8,   t9,  text_color=#FFFFFF, bgcolor= d9 >= allAvg ?   #ff0000 : #000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 0, 9,   t10, text_color=#FFFFFF, bgcolor= d10 >= allAvg ?   #ff0000 : #000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 0, 10,   t11, text_color=#FFFFFF, bgcolor= d11 >= allAvg ? #ff0000 : #000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 0, 11,  t12, text_color=#FFFFFF, bgcolor= d12 >= allAvg ?   #ff0000 : #000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 0, 12,  t13, text_color=#FFFFFF, bgcolor= d13 >= allAvg ?   #ff0000 : #000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 0, 13,  t14, text_color=#FFFFFF, bgcolor= d14 >= allAvg ?   #ff0000 : #000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 0, 14,  t15, text_color=#FFFFFF, bgcolor= d15 >= allAvg ?   #ff0000 : #000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 0, 15,  t16, text_color=#FFFFFF, bgcolor= d16 >= allAvg ?   #ff0000 : #000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 0, 16,  t17, text_color=#FFFFFF, bgcolor= d17 >= allAvg ?   #ff0000 : #000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 0, 17,  t18, text_color=#FFFFFF, bgcolor= d18 >= allAvg ?   #ff0000 : #000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 0, 18,  t19, text_color=#FFFFFF, bgcolor= d19 >= allAvg ?   #ff0000 : #000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 0, 19,  t20, text_color=#FFFFFF, bgcolor= d20 >= allAvg ?   #ff0000 : #000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 0, 20,  t21, text_color=#FFFFFF, bgcolor= d21 >= allAvg ? #ff0000 : #000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 0, 21,  t22, text_color=#FFFFFF, bgcolor= d22 >= allAvg ?   #ff0000 : #000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 0, 22,  t23, text_color=#FFFFFF, bgcolor= d23 >= allAvg ?   #ff0000 : #000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 0, 23,  t24, text_color=#FFFFFF, bgcolor= d24 >= allAvg ?   #ff0000 : #000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 0, 24,  t25, text_color=#FFFFFF, bgcolor= d25 >= allAvg ?   #ff0000 : #000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 0, 25,  t26, text_color=#FFFFFF, bgcolor= d26 >= allAvg ?   #ff0000 : #000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 0, 26,  t27, text_color=#FFFFFF, bgcolor= d27 >= allAvg ?   #ff0000 : #000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 0, 27,  t28, text_color=#FFFFFF, bgcolor= d28 >= allAvg ?   #ff0000 : #000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 0, 28,  t29, text_color=#FFFFFF, bgcolor= d29 >= allAvg ?   #ff0000 : #000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 0, 29,  t30, text_color=#FFFFFF, bgcolor= d30 >= allAvg ?   #ff0000 : #000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 0, 30,  t31, text_color=#FFFFFF, bgcolor= d31 >= allAvg ? #ff0000 : #000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 0, 31,  t32, text_color=#FFFFFF, bgcolor= d32 >= allAvg ?   #ff0000 : #000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 0, 32,  t33, text_color=#FFFFFF, bgcolor= d33 >= allAvg ?   #ff0000 : #000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 0, 33,  t34, text_color=#FFFFFF, bgcolor= d34 >= allAvg ?   #ff0000 : #000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 0, 34,  t35, text_color=#FFFFFF, bgcolor= d35 >= allAvg ?   #ff0000 : #000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 0, 35,  t36, text_color=#FFFFFF, bgcolor= d36 >= allAvg ?   #ff0000 : #000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 0, 36,  t37, text_color=#FFFFFF, bgcolor= d37 >= allAvg ?   #ff0000 : #000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 0, 37,  t38, text_color=#FFFFFF, bgcolor= d38 >= allAvg ?   #ff0000 : #000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 0, 38,  t39, text_color=#FFFFFF, bgcolor= d39 >= allAvg ?   #ff0000 : #000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 0, 39,  t40, text_color=#FFFFFF, bgcolor= d40 >= allAvg ?   #ff0000 : #000000, text_size=size.auto, text_halign=text.align_left) 

    table.cell(dTable, 1, 1,   str.tostring(d2)+" %",  text_color=#FFFFFF, bgcolor=#000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 1, 2,   str.tostring(d3)+" %",  text_color=#FFFFFF, bgcolor=#000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 1, 3,   str.tostring(d4)+" %",  text_color=#FFFFFF, bgcolor=#000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 1, 4,   str.tostring(d5)+" %",  text_color=#FFFFFF, bgcolor=#000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 1, 5,   str.tostring(d6)+" %",  text_color=#FFFFFF, bgcolor=#000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 1, 6,   str.tostring(d7)+" %",  text_color=#FFFFFF, bgcolor=#000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 1, 7,   str.tostring(d8)+" %",  text_color=#FFFFFF, bgcolor=#000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 1, 8,   str.tostring(d9)+" %",  text_color=#FFFFFF, bgcolor=#000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 1, 9,   str.tostring(d10)+" %", text_color=#FFFFFF, bgcolor=#000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 1, 10,   str.tostring(d11)+" %", text_color=#FFFFFF, bgcolor=#000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 1, 11,  str.tostring(d12)+" %", text_color=#FFFFFF, bgcolor=#000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 1, 12,  str.tostring(d13)+" %", text_color=#FFFFFF, bgcolor=#000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 1, 13,  str.tostring(d14)+" %", text_color=#FFFFFF, bgcolor=#000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 1, 14,  str.tostring(d15)+" %", text_color=#FFFFFF, bgcolor=#000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 1, 15,  str.tostring(d16)+" %", text_color=#FFFFFF, bgcolor=#000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 1, 16,  str.tostring(d17)+" %", text_color=#FFFFFF, bgcolor=#000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 1, 17,  str.tostring(d18)+" %", text_color=#FFFFFF, bgcolor=#000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 1, 18,  str.tostring(d19)+" %", text_color=#FFFFFF, bgcolor=#000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 1, 19,  str.tostring(d20)+" %", text_color=#FFFFFF, bgcolor=#000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 1, 20,  str.tostring(d21)+" %", text_color=#FFFFFF, bgcolor=#000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 1, 21,  str.tostring(d22)+" %", text_color=#FFFFFF, bgcolor=#000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 1, 22,  str.tostring(d23)+" %", text_color=#FFFFFF, bgcolor=#000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 1, 23,  str.tostring(d24)+" %", text_color=#FFFFFF, bgcolor=#000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 1, 24,  str.tostring(d25)+" %", text_color=#FFFFFF, bgcolor=#000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 1, 25,  str.tostring(d26)+" %", text_color=#FFFFFF, bgcolor=#000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 1, 26,  str.tostring(d27)+" %", text_color=#FFFFFF, bgcolor=#000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 1, 27,  str.tostring(d28)+" %", text_color=#FFFFFF, bgcolor=#000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 1, 28,  str.tostring(d29)+" %", text_color=#FFFFFF, bgcolor=#000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 1, 29,  str.tostring(d30)+" %", text_color=#FFFFFF, bgcolor=#000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 1, 30,  str.tostring(d31)+" %", text_color=#FFFFFF, bgcolor=#000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 1, 31,  str.tostring(d32)+" %", text_color=#FFFFFF, bgcolor=#000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 1, 32,  str.tostring(d33)+" %", text_color=#FFFFFF, bgcolor=#000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 1, 33,  str.tostring(d34)+" %", text_color=#FFFFFF, bgcolor=#000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 1, 34,  str.tostring(d35)+" %", text_color=#FFFFFF, bgcolor=#000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 1, 35,  str.tostring(d36)+" %", text_color=#FFFFFF, bgcolor=#000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 1, 36,  str.tostring(d37)+" %", text_color=#FFFFFF, bgcolor=#000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 1, 37,  str.tostring(d38)+" %", text_color=#FFFFFF, bgcolor=#000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 1, 38,  str.tostring(d39)+" %", text_color=#FFFFFF, bgcolor=#000000, text_size=size.auto, text_halign=text.align_left) 
    table.cell(dTable, 1, 39,  str.tostring(d40)+" %", text_color=#FFFFFF, bgcolor=#000000, text_size=size.auto, text_halign=text.align_left) 
