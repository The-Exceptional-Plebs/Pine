// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © balipour

//@version=5
indicator('Durbin Watson Test [pig]', 'BA🐷 DWT', false, format.inherit, precision=2, timeframe='')

//Background Color
bgcolor(#000000c0)

//Inputs
src = input(close, '===== Source =====')
len = input.int(30, 'Lookback', minval=6, step=2)
tk = input.int(1, '--- Line Thickness ---', options=[1, 2, 3])

//Linear Regression: Runs an Regression on barindex and log returns
y = math.log(src / src[1])  //Log returns
x = bar_index
sumy = math.sum(y, len)
sumx = math.sum(x, len)
sumxy = math.sum(x * y, len)
sumx2 = math.sum(math.pow(x, 2), len)
sumy2 = math.sum(math.pow(y, 2), len)

//slope
B = (len * sumxy - sumx * sumy) / (len * sumx2 - math.pow(sumx, 2))

//Intercept
a = (sumy - B * sumx) / len

//Linear Regression Function
Y = B * x + a

//Residual Function: Substract the prediction result generated from linear regression from the data
f(n) =>
    y[n] - (B * (x - n) + a)

//Sum of squared of the first difference error terms
d = array.new_float(0)
for i = 0 to len - 2 by 1
    array.push(d, math.pow(f(i + 1) - f(i), 2))

sumd = array.sum(d)

//Sum of squared of all error terms
e = array.new_float(0)
for i = 0 to len - 1 by 1
    array.push(e, math.pow(f(i), 2))

sume = array.sum(e)

//Durbin Watson Stats, Value between 0 and 4. 
dw = sumd / sume

//Significance level based on N of observation. 0.05 significance Durbin Watson Table below
//Between Lower and Upper Threshold means no significant first order autocorrelation, outside threshold means significant first order autocorrelation
l = 0.0
if len == 6
    l := 0.61
    l
if len == 7
    l := 0.70
    l
if len == 8
    l := 0.76
    l
if len == 9
    l := 0.82
    l
if len == 10
    l := 0.88
    l
if len == 11
    l := 0.93
    l
if len == 12
    l := 0.97
    l
if len == 13
    l := 1.01
    l
if len == 14
    l := 1.05
    l
if len == 15
    l := 1.08
    l
if len == 16
    l := 1.10
    l
if len == 17
    l := 1.13
    l
if len == 18
    l := 1.16
    l
if len == 19
    l := 1.18
    l
if len == 20
    l := 1.20
    l
if len == 21
    l := 1.22
    l
if len == 22
    l := 1.24
    l
if len == 23
    l := 1.26
    l
if len == 24
    l := 1.27
    l
if len == 25
    l := 1.29
    l
if len == 26
    l := 1.30
    l
if len == 27
    l := 1.32
    l
if len == 28
    l := 1.33
    l
if len == 29
    l := 1.34
    l
if len == 30
    l := 1.35
    l
if len == 31
    l := 1.36
    l
if len == 32
    l := 1.37
    l
if len == 33
    l := 1.38
    l
if len == 34
    l := 1.39
    l
if len == 35
    l := 1.40
    l
if len == 36
    l := 1.41
    l
if len == 37
    l := 1.42
    l
if len == 38
    l := 1.43
    l
if len == 39
    l := 1.43
    l
if len == 40
    l := 1.44
    l
if len > 40 and len <= 45
    l := 1.48
    l
if len > 45 and len <= 50
    l := 1.50
    l
if len > 50 and len <= 55
    l := 1.53
    l
if len > 55 and len <= 60
    l := 1.55
    l
if len > 60 and len <= 65
    l := 1.57
    l
if len > 65 and len <= 70
    l := 1.58
    l
if len > 70 and len <= 75
    l := 1.60
    l
if len > 75 and len <= 80
    l := 1.61
    l
if len > 80 and len <= 85
    l := 1.62
    l
if len > 85 and len <= 90
    l := 1.63
    l
if len > 90 and len <= 95
    l := 1.64
    l
if len > 95 and len <= 100
    l := 1.65
    l
if len > 100 and len <= 150
    l := 1.72
    l
if len > 150 and len <= 200
    l := 1.76
    l
if len > 200 and len <= 250
    l := 1.79
    l
if len > 250 and len <= 300
    l := 1.80
    l
if len > 300
    l := 1.82
    l

//Upper Threshold eqauls to 4 - lower threshold due to symmetry
ut = 4 - l

//Colors
c = dw > 2 ? color.white : dw < 2 ? color.orange : na

bgcolor(dw > ut ? color.aqua : na, transp=75)
bgcolor(dw < l ? color.red : na, transp=70)

//Plots
plot(dw, 'DWT', color=c, linewidth=tk, style=plot.style_stepline, transp=0)

hline(2, 'Mid', color.gray, hline.style_solid)  //Above 2 -autocorrelation, Below 2 +autocorrelation
plot(l, 'Lower threshold', color.new(color.fuchsia, 0), trackprice=true, show_last=1, style=plot.style_linebr)
plot(ut, 'Upper threshold', color.new(color.lime, 0), trackprice=true, show_last=1, style=plot.style_linebr)

